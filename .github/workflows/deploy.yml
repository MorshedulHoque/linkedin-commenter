name: Deploy LinkedIn Commenter Backend to VPS

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Run on the latest Ubuntu runner

    steps:
      # Step 1: Checkout code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Pull the latest code on the VPS (assumes the VPS has access to the repository)
      - name: Pull latest changes on the server
        run: |
          ssh -o StrictHostKeyChecking=no utsho@203.82.193.150 << 'EOF'
            cd /home/utsho1/htdocs/linkedin-commenter/  # Go to your project directory
            git pull origin main  # Pull the latest code from the main branch
          EOF

      # Step 3: Install dependencies for Flask and Node.js on the VPS
      - name: Install dependencies for Flask
        run: |
          ssh -o StrictHostKeyChecking=no utsho@203.82.193.150 << 'EOF'
            cd /home/utsho1/htdocs/linkedin-commenter/  # Go to your project directory
            source venv/bin/activate  # Activate virtual environment for Flask
            pip install -r requirements.txt  # Install Python dependencies
          EOF

      - name: Install dependencies for Node.js
        run: |
          ssh -o StrictHostKeyChecking=no utsho@203.82.193.150 << 'EOF'
            cd /home/utsho1/htdocs/linkedin-commenter/extension/scripts  # Go to Node.js directory
            npm install  # Install Node.js dependencies
          EOF

      # Step 4: Restart the backend services (Flask and Node.js)
      - name: Restart services
        run: |
          ssh -o StrictHostKeyChecking=no utsho@203.82.193.150 << 'EOF'
            # Restart Flask using Gunicorn (adjust the service name if necessary)
            sudo systemctl restart gunicorn  # Restart the Flask service

            # Restart Node.js application using PM2 (or your preferred process manager)
            pm2 restart server.js  # Adjust the name of your Node.js app if needed
          EOF
